class Solution {
    Node* merge2SortedLL(Node* node1, Node* node2) {
        Node* dummy = new Node(-1);
        Node* itr = dummy;
        while(node1 != NULL && node2 != NULL) {
            if(node1->data <= node2->data) {
                itr->bottom = node1;
                node1 = node1->bottom;
            } else {
                itr->bottom = node2;
                node2 = node2->bottom;
            }
            itr = itr->bottom;
        }
        if(node1 != NULL) itr->bottom = node1;
        if(node2 != NULL) itr->bottom = node2;
        
        return dummy->bottom;
    }
  public:
    Node *flatten(Node *root) {
        Node* res = NULL;
        while(root != NULL) {
            res = merge2SortedLL(res, root);
            Node* next = root->next;
            root->next = NULL;
            root = next;
        }
        return res;
    }
};
