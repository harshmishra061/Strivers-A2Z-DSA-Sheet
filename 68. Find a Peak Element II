class Solution {
public:
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int low = 0, high = mat[0].size() - 1;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            int ind = 0;
            for(int i = 0;i < mat.size();i++) {
                if(mat[ind][mid] < mat[i][mid]) {
                    ind = i;
                }
            }
            int left = mid - 1 >= 0 ? mat[ind][mid - 1] : INT_MIN;
            int right = mid + 1 < mat[0].size() ? mat[ind][mid + 1] : INT_MIN;
            if(left < mat[ind][mid] && mat[ind][mid] > right) {
                return {ind, mid};
            } else if(left > mat[ind][mid]) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return {-1, -1};
    }
};
