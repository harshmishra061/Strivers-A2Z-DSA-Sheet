class Solution {
public:
    vector<vector<int>> dir;
    bool exist(int pos, int i, int j, vector<vector<char>>& board, string word, vector<vector<bool>>& visited) {
        if(pos == word.size() - 1){
            return word[pos] == board[i][j];
        }

        if(board[i][j] != word[pos]) return false;

        visited[i][j] = true;
        for(int k = 0;k < 4;k++) {
            int newi = i + dir[k][0];
            int newj = j + dir[k][1];
            if(newi >= 0 && newi < board.size() && newj >= 0 && newj < board[0].size() && !visited[newi][newj]) {
                if(exist(pos + 1, newi, newj, board, word, visited)) return true;
            }
        }
        visited[i][j] = false;
        return false;
    }


    bool exist(vector<vector<char>>& board, string word) {
        dir = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};
        vector<vector<bool>> visited(board.size(), vector<bool>(board[0].size(), false));
        for(int i = 0;i < board.size();i++) {
            for(int j = 0;j < board[0].size();j++) {
                if(exist(0, i, j, board, word, visited)) return true;
            }
        }
        return false;
    }
};
