class Solution {
    bool possible(vector<int>& nums, int threshold, int div) {
        int sum = 0;
        for(auto num : nums) {
            sum += (num + div - 1) / div;
        }
        if(sum <= threshold) return true;
        return false;
    }
public:
    int smallestDivisor(vector<int>& nums, int threshold) {
        int low = 1, high = *max_element(nums.begin(), nums.end()), res = -1;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            if(possible(nums, threshold, mid)) {
                res = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return res;
    }
};
