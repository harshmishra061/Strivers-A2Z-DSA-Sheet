vector<int> findUnion(int arr1[], int arr2[], int n, int m)
    {
        int i = 0, j = 0;
        vector<int> res;
        while(i < n && j < m) {
            if(arr1[i] < arr2[j]) {
                res.push_back(arr1[i]);
                while(i < n && res.back() == arr1[i]) i++;
            } else if(arr2[j] < arr1[i]) {
                res.push_back(arr2[j]);
                while(j < m && res.back() == arr2[j]) j++;
            } else {
                res.push_back(arr1[i]);
                while(i < n && res.back() == arr1[i]) i++;
                while(j < m && res.back() == arr2[j]) j++;
            }
        }
        
        while(i < n) {
            res.push_back(arr1[i]);
            while(i < n && res.back() == arr1[i]) i++;
        }
        while(j < m) {
            res.push_back(arr2[j]);
            while(j < m && res.back() == arr2[j]) j++;
        }
        return res;
    }
