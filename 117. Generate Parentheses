class Solution {
    void generateParenthesis(string& str, int open, int close , int n, vector<string>& res) {
        if(str.size() == 2 * n) {
            res.push_back(str);
            return;
        } 

        if(open < n) {
            str.push_back('(');
            generateParenthesis(str, open + 1, close, n, res);
            str.pop_back();
        }

        if(close < open) {
            str.push_back(')');
            generateParenthesis(str, open, close + 1, n, res);
            str.pop_back();
        }
    }
public:
    vector<string> generateParenthesis(int n) {
        vector<string> res;
        string str = "";
        generateParenthesis(str, 0, 0, n, res);
        return res;
    }
};
