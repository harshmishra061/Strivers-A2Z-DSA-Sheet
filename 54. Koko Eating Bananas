class Solution {
    long helper(vector<int>& piles, int k) {
        long res = 0;
        for(auto pile : piles) {
            res += (pile + k - 1) / k;
        }
        return res;
    }
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        int low = 1, high = *max_element(piles.begin(), piles.end()), res = -1;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            long totTimeReq = helper(piles, mid);
            if(totTimeReq <= h) {
                res = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return res;
    }
};
