class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& arr, int target) {
        sort(arr.begin(), arr.end());
        int n = arr.size();
        vector<vector<int>> res;
        for(int i = 0;i < n - 3;i++) {
            if(i != 0 && arr[i - 1] == arr[i]) {
                continue;
            }
            for(int j = i + 1;j < n - 2;j++) {
                if(j != i + 1 && arr[j - 1] == arr[j]) {
                    continue;
                }
                int k = j + 1, l = n - 1;
                while(k < l) {
                    long currsum = 1LL * arr[i] + arr[j] + arr[k] + arr[l];
                    if(k != j + 1 && arr[k - 1] == arr[k]) {
                        k++;
                    } else if(l != n - 1 && arr[l] == arr[l + 1]) {
                        l--;
                    } else if(currsum == target) {
                        res.push_back({arr[i], arr[j], arr[k], arr[l]});
                        k++, l--;
                    } else if(currsum < target) {
                        k++;
                    } else {
                        l--;
                    }
                }
            }
        }
        return res;
    }
};
