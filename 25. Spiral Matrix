class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int n = matrix.size(), m = matrix[0].size();
        int left = 0, right = m - 1, top = 0, bottom = n - 1;
        int flag = 0;
        vector<int> res;
        while(left <= right && top <= bottom) {
            if(flag == 0) {
                for(int j = left;j <= right;j++) {
                    res.push_back(matrix[top][j]);
                }
                top++; flag = 1;
            } else if(flag == 1) {
                for(int i = top;i <= bottom;i++) {
                    res.push_back(matrix[i][right]);
                }
                right--; flag = 2;
            } else if(flag == 2) {
                for(int j = right;j >= left;j--) {
                    res.push_back(matrix[bottom][j]);
                }
                bottom--; flag = 3;
            } else {
                for(int i = bottom;i >= top;i--) {
                    res.push_back(matrix[i][left]);
                }
                left++; flag = 0;
            }
        }
        return res;
    }
};
