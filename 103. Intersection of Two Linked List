/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
    int findLengthLL(ListNode* head) {
        int len = 0;
        while(head != NULL) {
            len++;
            head = head->next;
        }
        return len;
    }
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int len1 = findLengthLL(headA);
        int len2 = findLengthLL(headB);

        if(len1 > len2) {
            swap(headA, headB);
            swap(len1, len2);
        }

        for(int i = 0;i < len2 - len1;i++) headB = headB->next;

        while(headA != headB) {
            headA = headA->next;
            headB = headB->next;
        } 
        return headA;
    }
};
